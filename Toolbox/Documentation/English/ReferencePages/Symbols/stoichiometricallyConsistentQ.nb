Notebook[{
Cell[BoxData[GridBox[{
   {Cell["TOOLBOX PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"detectUnconservedMetabolites\"\>":>
       Documentation`HelpLookup[
       "paclet:Toolbox/ref/detectUnconservedMetabolites"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"Toolbox/ref/stoichiometricallyConsistentQ\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Toolbox/ref/stoichiometricallyConsistentQ"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Toolbox/ref/\
stoichiometricallyConsistentQ.html"], StandardForm]], "Input", 
              TextClipboardType -> "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$50439], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Toolbox/ref/stoichiometricallyConsistentQ", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["stoichiometricallyConsistentQ", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"stoichiometricallyConsistentQ", "[", "model", "]"}]], 
      "InlineFormula"],
     "\[LineSeparator]checks the stochiometric consistency of model (see \
Gevorgyan, A., Poolman, M. G., & Fell, D. A. (2008). Detection of \
stoichiometric inconsistencies in biomolecular models Bioinformatics (Oxford, \
England), 24(19), 2245\[Dash]2251. doi:10.1093/bioinformatics/btn425)."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          Cell[
           TextData[{
             Cell[
              BoxData[
               InterpretationBox[
                StyleBox[
                 
                 GraphicsBox[{}, BaselinePosition -> Baseline, 
                  ImageSize -> {6, 0}], CacheGraphics -> False], 
                Spacer[6]]]], "Details"}], "NotesFrameText"], 
          Appearance -> {Automatic, None}, BaseStyle -> None, 
          ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection", 
      CellSize -> {5000, Inherited}], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, BaselinePosition -> Baseline, 
               ImageSize -> {6, 0}], CacheGraphics -> False], 
             Spacer[6]]]], "Details"}], "NotesFrameText"], 
       Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellID->1696433443],

Cell["", "SectionHeaderSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Solver",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Solver"], 
    ButtonBox["LinearProgramming",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/LinearProgramming"], Cell[
    "The LP solver that should be used", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True}}}}],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[{
        Cell[
         BoxData[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, BaselinePosition -> Baseline, 
             ImageSize -> {6, 0}], CacheGraphics -> False], 
           Spacer[6]]]], "Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
        Cell["(1)", "ExampleCount"]}], "PrimaryExamplesSection", 
      CellSize -> {5000, Inherited}], 
     TextData[{
       Cell[
        BoxData[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, BaselinePosition -> Baseline, ImageSize -> {6, 0}],
            CacheGraphics -> False], 
          Spacer[6]]]], "Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
       
       Cell["(1)", "ExampleCount"]}]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellTags->"PrimaryExamplesSection",
 CellID->1963978929],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1770205313],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Toolbox`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1987800271],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"constructModel", "[", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       OverscriptBox[
        RowBox[{
         InterpretationBox[
          StyleBox["x1",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x1", None],
          Editable->False,
          Selectable->False], "\[Equilibrium]", 
         InterpretationBox[
          StyleBox["x2",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x2", None],
          Editable->False,
          Selectable->False]}], 
        StyleBox["1",
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         FontColor->RGBColor[0, 0, 0],
         $CellContext`LineColor -> RGBColor[0, 0, 0],
         $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
         $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
         $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
       Toolbox`reaction["1", {
         Toolbox`metabolite["x1", None]}, {
         Toolbox`metabolite["x2", None]}, {1, 1}, True],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       OverscriptBox[
        RowBox[{
         InterpretationBox[
          StyleBox["x2",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x2", None],
          Editable->False,
          Selectable->False], "\[Equilibrium]", 
         InterpretationBox[
          StyleBox["x3",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x3", None],
          Editable->False,
          Selectable->False]}], 
        StyleBox["2",
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         FontColor->RGBColor[0, 0, 0],
         $CellContext`LineColor -> RGBColor[0, 0, 0],
         $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
         $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
         $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
       Toolbox`reaction["2", {
         Toolbox`metabolite["x2", None]}, {
         Toolbox`metabolite["x3", None]}, {1, 1}, True],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       OverscriptBox[
        RowBox[{
         InterpretationBox[
          StyleBox["x3",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x3", None],
          Editable->False,
          Selectable->False], "\[RightArrow]", 
         InterpretationBox[
          StyleBox["x4",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x4", None],
          Editable->False,
          Selectable->False]}], 
        StyleBox["3",
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         FontColor->RGBColor[0, 0, 0],
         $CellContext`LineColor -> RGBColor[0, 0, 0],
         $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
         $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
         $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
       Toolbox`reaction["3", {
         Toolbox`metabolite["x3", None]}, {
         Toolbox`metabolite["x4", None]}, {1, 1}, False],
       Editable->False,
       Selectable->False]}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1654525261],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stoichiometricallyConsistentQ", "[", "model", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->556058318],

Cell[BoxData["True"], "Output",
 ImageSize->{33, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->608758429]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"inconsistentModel", "=", 
   RowBox[{"constructModel", "[", 
    RowBox[{"str2mass", "/@", 
     RowBox[{"{", 
      RowBox[{"\"\<1: x1 <=> x2\>\"", ",", "\"\<2: x1 -> x2 + x3\>\""}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->490333575],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stoichiometricallyConsistentQ", "[", "inconsistentModel", 
  "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1949552904],

Cell[BoxData["False"], "Output",
 ImageSize->{40, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->790821895]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"detectUnconservedMetabolites", "[", "inconsistentModel", 
  "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->350432142],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearProgramming", "::", "lpip"}], "MessageName"], ":", 
  " ", "\<\"Warning: Integer linear programming will use a machine-precision \
approximation of the inputs. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearProgramming\\\", ButtonNote -> \
\\\"LinearProgramming::lpip\\\"]\\)\"\>"}]], "Message", "MSG",
 CellLabel->"During evaluation of In[6]:=",
 CellID->567297982],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   StyleBox["x3",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    FontColor->RGBColor[0, 0, 0],
    $CellContext`LineColor -> RGBColor[0, 0, 0],
    $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
    $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
    $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
   Toolbox`metabolite["x3", None],
   Editable->False,
   Selectable->False], "}"}]], "Output",
 ImageSize->{32, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[6]=",
 CellID->1897274441]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[{
        Cell[
         BoxData[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, BaselinePosition -> Baseline, 
             ImageSize -> {6, 0}], CacheGraphics -> False], 
           Spacer[6]]]], "See Also"}], "SeeAlsoSection", 
      CellSize -> {5000, Inherited}], 
     TextData[{
       Cell[
        BoxData[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, BaselinePosition -> Baseline, ImageSize -> {6, 0}],
            CacheGraphics -> False], 
          Spacer[6]]]], "See Also"}]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellID->1255426704],

Cell[TextData[Cell[BoxData[
 TemplateBox[{Cell[
    TextData["detectUnconservedMetabolites"]],
   "paclet:Toolbox/ref/detectUnconservedMetabolites"},
  "RefLink",
  BaseStyle->{
   "InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"stoichiometricallyConsistentQ",
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Wolfram Language", ButtonData -> "paclet:guide/WolframRoot", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 6, 1, 13, 38, 16.073094}", 
    "history" -> {"XX", "", "", ""}, "context" -> "Toolbox`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Toolbox Package Symbol", "language" -> "en", "paclet" -> 
    "Toolbox Package", "status" -> "None", "summary" -> 
    "stoichiometricallyConsistentQ[model] checks the stochiometric \
consistency of model (see Gevorgyan, A., Poolman, M. G., & Fell, D. A. \
(2008). Detection of stoichiometric inconsistencies in biomolecular models \
Bioinformatics (Oxford, England), 24(19), 2245\\[Dash]2251. \
doi:10.1093/bioinformatics/btn425).", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "stoichiometricallyConsistentQ", "titlemodifier" -> "", 
    "windowtitle" -> "stoichiometricallyConsistentQ", "type" -> "Symbol", 
    "uri" -> "Toolbox/ref/stoichiometricallyConsistentQ"}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion -> "6.0",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "6.0", 
  StyleDefinitions -> "Default.nb"]
]

