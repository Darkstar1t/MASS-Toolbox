Notebook[{
Cell[BoxData[GridBox[{
   {Cell["TOOLBOX PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[Cell[
    BoxData[
     ActionMenuBox[
      FrameBox[
       InterpretationBox[Cell[TextData[{
         "URL",
         StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
          StripOnInput->False]
        }]],
        TextCell[
         Row[{"URL", 
           Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
       StripOnInput->False], {"\<\"Toolbox/ref/visualizeGPR\"\>":>
      None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["Toolbox/ref/visualizeGPR"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/language/Toolbox/ref/\
visualizeGPR.html"], StandardForm]], "Input", TextClipboardType -> 
             "PlainText"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
            If[
             TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$55346], 
             "http://reference.wolfram.com/system-modeler/", 
             "http://reference.wolfram.com/language/"], 
            "Toolbox/ref/visualizeGPR", ".html"]], None}]}]},
      Appearance->None,
      MenuAppearance->Automatic,
      MenuStyle->"URLMenu"]],
     LineSpacing->{1.4, 0}]], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["visualizeGPR", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell["Plots GPR association."]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          Cell[
           TextData[{
             Cell[
              BoxData[
               InterpretationBox[
                StyleBox[
                 
                 GraphicsBox[{}, BaselinePosition -> Baseline, 
                  ImageSize -> {6, 0}], CacheGraphics -> False], 
                Spacer[6]]]], "Details"}], "NotesFrameText"], 
          Appearance -> {Automatic, None}, BaseStyle -> None, 
          ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection", 
      CellSize -> {5000, Inherited}], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, BaselinePosition -> Baseline, 
               ImageSize -> {6, 0}], CacheGraphics -> False], 
             Spacer[6]]]], "Details"}], "NotesFrameText"], 
       Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellID->2035000849],

Cell["", "SectionHeaderSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AlignmentPoint",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AlignmentPoint"], 
    ButtonBox["Center",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Center"], Cell["\<\
AlignmentPoint is an option which specifies how objects should by default be \
aligned when they appear in Inset.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AspectRatio",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AspectRatio"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
AspectRatio is an option for Graphics and related functions which specifies \
the ratio of height to width for a plot. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Axes",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Axes"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Axes is an option for graphics functions that specifies whether axes should \
be drawn. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AxesLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AxesLabel"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AxesLabel is an option for graphics functions that specifies labels for axes. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AxesOrigin",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AxesOrigin"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
AxesOrigin is an option for graphics functions which specifies where any axes \
drawn should cross. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AxesStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AxesStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
AxesStyle is an option for graphics functions which specifies how axes should \
be rendered. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Background",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Background"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
Background is an option which specifies what background color to use. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BaselinePosition",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/BaselinePosition"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
BaselinePosition is an option which specifies where the baseline of an object \
is considered to be for purposes of alignment with surrounding text or other \
expressions. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BaseStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/BaseStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
BaseStyle is an option for formatting and related constructs that specifies \
the base style to use for them. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ColorOutput",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ColorOutput"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
ColorOutput is an option for graphics functions which specifies the type of \
color output to produce. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ContentSelectable",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ContentSelectable"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
ContentSelectable is an option to constructs such as Inset, Graphics and \
GraphicsGroup that specifies whether and how content within them should be \
selectable. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["CoordinatesToolOptions",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/CoordinatesToolOptions"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[TextData[{
     "CoordinatesToolOptions is an option for Graphics that gives values of \
options associated with the ",
     Cell[BoxData[
      StyleBox[
       RowBox[{"Get", " ", "Coordinates"}], "MenuName"]], "InlineFormula"],
     " tool."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DataRange",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DataRange"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
DataRange is an option for functions such as ListPlot and ListDensityPlot \
that specifies what range of actual coordinates the data should be assumed to \
occupy. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DisplayFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DisplayFunction"], 
    ButtonBox["$DisplayFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/$DisplayFunction"], Cell["\<\
DisplayFunction is an option for graphics and sound functions that specifies \
a function to apply to graphics and sound objects before returning them.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["EdgeLabeling",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EdgeLabeling"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
EdgeLabeling is an option for GraphPlot and related functions which specifies \
whether labeling specified for edges should be displayed by default.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["EdgeRenderingFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EdgeRenderingFunction"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
EdgeRenderingFunction is an option for GraphPlot and related functions which \
gives a function to generate the graphics primitives to use in rendering each \
edge.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Epilog",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Epilog"], 
    RowBox[{"{", "}"}], Cell["\<\
Epilog is an option for graphics functions which gives a list of graphics \
primitives to be rendered after the main part of the graphics is rendered. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FormatType",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FormatType"], 
    ButtonBox["TraditionalForm",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/TraditionalForm"], Cell["\<\
FormatType is an option for output streams, graphics and functions such as \
Text which specifies the default format type to use when outputting \
expressions. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Frame",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Frame"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Frame is an option for Graphics, Grid and other constructs that specifies \
whether to include a frame. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FrameLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FrameLabel"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
FrameLabel is an option for Graphics, Manipulate and related functions that \
specifies labels to be placed on the edges of a frame. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FrameStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FrameStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
FrameStyle is an option for Graphics, Grid and other constructs that \
specifies the style in which to draw frames.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FrameTicks",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FrameTicks"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
FrameTicks is an option for 2D graphics functions that specifies tick marks \
for the edges of a frame. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FrameTicksStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FrameTicksStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
FrameTicksStyle is an option for 2D graphics functions which specifies how \
frame ticks should be rendered.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["GridLines",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GridLines"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
GridLines is an option for two-dimensional graphics functions that specifies \
grid lines. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["GridLinesStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GridLinesStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
GridLinesStyle is an option for 2D graphics functions that specifies how grid \
lines should be rendered.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImageMargins",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageMargins"], "0.", Cell["\<\
ImageMargins is an option which specifies the absolute margins to leave \
around the image displayed for an object. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImagePadding",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImagePadding"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
ImagePadding is an option for graphics functions that specifies what absolute \
extra padding should be left for extended objects such as thick lines and \
annotations such as tick and axis labels.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["LabelStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/LabelStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
LabelStyle is an option for formatting and related constructs that specifies \
the style to use in displaying their label-like elements. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["MultiedgeStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/MultiedgeStyle"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
MultiedgeStyle is an option for GraphPlot and related functions which \
specifies how to draw multiple edges.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PackingMethod",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PackingMethod"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
PackingMethod is an option for GraphPlot and related functions which \
specifies how disconnected components should be packed together in the layout \
produced.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotLabel"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
PlotLabel is an option for graphics functions that specifies an overall label \
for a plot. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotRange",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotRange"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
PlotRange is an option for graphics functions that specifies what range of \
coordinates to include in a plot. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotRangeClipping",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotRangeClipping"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
PlotRangeClipping is an option for graphics functions that specifies whether \
graphics objects should be clipped at the edge of the region defined by \
PlotRange, or should be allowed to extend to the actual edge of the image. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotRangePadding",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotRangePadding"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
PlotRangePadding is an option for graphics functions that specifies how much \
further axes etc. should extend beyond the range of coordinates specified by \
PlotRange. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotRegion",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotRegion"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
PlotRegion is an option for graphics functions that specifies what region of \
the final display area a plot should fill. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PreserveImageOptions",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PreserveImageOptions"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
PreserveImageOptions is an option to graphics and related functions that \
specifies whether image size and certain other options should be preserved \
from the previous version of a graphic if the graphic is replaced by a new \
one in output.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Prolog",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Prolog"], 
    RowBox[{"{", "}"}], Cell["\<\
Prolog is an option for graphics functions which gives a list of graphics \
primitives to be rendered before the main part of the graphics is rendered. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["RotateLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/RotateLabel"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
RotateLabel is an option for graphics and related functions which specifies \
whether labels on vertical frame axes should be rotated to be vertical. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["SelfLoopStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/SelfLoopStyle"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
SelfLoopStyle is an option for GraphPlot and related functions which \
specifies how to draw self-loops that connect a vertex to itself.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Ticks",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Ticks"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
Ticks is an option for graphics functions that specifies tick marks for axes. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["TicksStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/TicksStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
TicksStyle is an option for graphics functions which specifies how ticks \
should be rendered.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["VertexCoordinateRules",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/VertexCoordinateRules"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
VertexCoordinateRules is an option for GraphPlot and related functions which \
specifies rules for determining the coordinates at which vertices should be \
placed.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["VertexLabeling",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/VertexLabeling"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
VertexLabeling is an option for GraphPlot and related functions which \
specifies whether labeling should be included by default for vertices in \
graphs.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["VertexRenderingFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/VertexRenderingFunction"], 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "#2", "]"}], " ", "===", " ", "String"}], 
           ",", " ", 
           RowBox[{"Framed", "[", "#2", "]"}], ",", " ", "#2"}], "]"}], ",", 
         " ", "#1"}], "]"}], "}"}], " ", "&"}], " "}], Cell["\<\
VertexRenderingFunction is an option for GraphPlot and related functions that \
gives a function to generate the graphics primitives to use in rendering each \
vertex.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DirectedEdges",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DirectedEdges"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
DirectedEdges is an option for Graph, GraphPlot, and related functions that \
specifies whether edges should be taken to be directed.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotStyle"], 
    RowBox[{"{", 
     RowBox[{"GrayLevel", "[", "0", "]"}], "}"}], Cell["\<\
PlotStyle is an option for plotting and related functions that specifies \
styles in which objects are to be drawn. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "800", "}"}], ",", " ", 
      RowBox[{"{", "300", "}"}]}], "}"}], Cell["\<\
ImageSize is an option which specifies the overall size of an image to \
display for an object. \
\>", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True, True, True, True, True, True, True, True, True, 
      True}}}}],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]]
}, Closed]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"visualizeGPR",
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Wolfram Language", ButtonData -> "paclet:guide/WolframRoot", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 6, 1, 13, 38, 24.087515}", 
    "history" -> {"XX", "", "", ""}, "context" -> "Toolbox`Visualization`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Toolbox Package Symbol", "language" -> "en", "paclet" -> 
    "Toolbox Package", "status" -> "None", "summary" -> 
    "Plots GPR association.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "visualizeGPR", "titlemodifier" -> "", "windowtitle" -> "visualizeGPR", 
    "type" -> "Symbol", "uri" -> "Toolbox/ref/visualizeGPR"}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion -> "6.0",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "6.0", 
  StyleDefinitions -> "Default.nb"]
]

