Notebook[{
Cell[BoxData[GridBox[{
   {Cell["TOOLBOX PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"getGradient\"\>":>
       Documentation`HelpLookup[
       "paclet:Toolbox/ref/getGradient"], "\<\"getStoichiometry\"\>":>
       Documentation`HelpLookup[
       "paclet:Toolbox/ref/getStoichiometry"], "\<\"D\"\>":>
       Documentation`HelpLookup["paclet:ref/D"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Toolbox/ref/getJacobian\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Toolbox/ref/getJacobian"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Toolbox/ref/\
getJacobian.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$26032], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Toolbox/ref/getJacobian", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["getJacobian", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[
    "getJacobian[model]\[LineSeparator]constructs the Jacobian matrix for \
model"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          Cell[
           TextData[{
             Cell[
              BoxData[
               InterpretationBox[
                StyleBox[
                 
                 GraphicsBox[{}, BaselinePosition -> Baseline, 
                  ImageSize -> {6, 0}], CacheGraphics -> False], 
                Spacer[6]]]], "Details"}], "NotesFrameText"], 
          Appearance -> {Automatic, None}, BaseStyle -> None, 
          ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection", 
      CellSize -> {5000, Inherited}], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, BaselinePosition -> Baseline, 
               ImageSize -> {6, 0}], CacheGraphics -> False], 
             Spacer[6]]]], "Details"}], "NotesFrameText"], 
       Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellID->1462034658],

Cell["", "SectionHeaderSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes",
 CellID->274703539],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Type",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Type"], "\"\<Concentration\>\"", Cell["\<\
generate either the concentration (\"Concentration\") or flux (\"Flux\") \
jacobian\
\>", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True}}}},
 CellID->1669245021],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[{
        Cell[
         BoxData[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, BaselinePosition -> Baseline, 
             ImageSize -> {6, 0}], CacheGraphics -> False], 
           Spacer[6]]]], "Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
        Cell["(2)", "ExampleCount"]}], "PrimaryExamplesSection", 
      CellSize -> {5000, Inherited}], 
     TextData[{
       Cell[
        BoxData[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, BaselinePosition -> Baseline, ImageSize -> {6, 0}],
            CacheGraphics -> False], 
          Spacer[6]]]], "Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
       
       Cell["(2)", "ExampleCount"]}]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellTags->"PrimaryExamplesSection",
 CellID->908608032],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->218980007],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Toolbox`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1853183878],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"constructModel", "[", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       OverscriptBox[
        RowBox[{
         InterpretationBox[
          StyleBox["x1",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x1", None],
          Editable->False,
          Selectable->False], "\[Equilibrium]", 
         InterpretationBox[
          StyleBox["x2",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x2", None],
          Editable->False,
          Selectable->False]}], 
        StyleBox["1",
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         FontColor->RGBColor[0, 0, 0],
         $CellContext`LineColor -> RGBColor[0, 0, 0],
         $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
         $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
         $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
       Toolbox`reaction["1", {
         Toolbox`metabolite["x1", None]}, {
         Toolbox`metabolite["x2", None]}, {1, 1}, True],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       OverscriptBox[
        RowBox[{
         InterpretationBox[
          StyleBox["x2",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x2", None],
          Editable->False,
          Selectable->False], "\[Equilibrium]", 
         InterpretationBox[
          StyleBox["x3",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x3", None],
          Editable->False,
          Selectable->False]}], 
        StyleBox["2",
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         FontColor->RGBColor[0, 0, 0],
         $CellContext`LineColor -> RGBColor[0, 0, 0],
         $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
         $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
         $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
       Toolbox`reaction["2", {
         Toolbox`metabolite["x2", None]}, {
         Toolbox`metabolite["x3", None]}, {1, 1}, True],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       OverscriptBox[
        RowBox[{
         InterpretationBox[
          StyleBox["x3",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x3", None],
          Editable->False,
          Selectable->False], "\[RightArrow]", 
         InterpretationBox[
          StyleBox["x4",
           StripOnInput->False,
           ShowSyntaxStyles->False,
           AutoSpacing->False,
           ZeroWidthTimes->True,
           FontColor->RGBColor[0, 0, 0],
           $CellContext`LineColor -> RGBColor[0, 0, 0],
           $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
           $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
           $CellContext`GraphicsColor -> RGBColor[0, 0, 0]],
          Toolbox`metabolite["x4", None],
          Editable->False,
          Selectable->False]}], 
        StyleBox["3",
         StripOnInput->False,
         ShowSyntaxStyles->False,
         AutoSpacing->False,
         ZeroWidthTimes->True,
         FontColor->RGBColor[0, 0, 0],
         $CellContext`LineColor -> RGBColor[0, 0, 0],
         $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
         $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
         $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
       Toolbox`reaction["3", {
         Toolbox`metabolite["x3", None]}, {
         Toolbox`metabolite["x4", None]}, {1, 1}, False],
       Editable->False,
       Selectable->False]}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->105650900],

Cell["Construct the (default) concentration Jacobian", "ExampleText",
 CellID->1262459847],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getJacobian", "[", "model", "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->335710815],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 130}, {
    202, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{202, 130},
  PlotRange->{{0, 202}, {0, 130}}]], "Output",
 ImageSize->{206, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->1757490338]
}, Open  ]],

Cell["Construct the flux Jacobian", "ExampleText",
 CellID->1334892730],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getJacobian", "[", 
   RowBox[{"model", ",", " ", 
    RowBox[{"Type", "\[Rule]", "\"\<Flux\>\""}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->780452901],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
WJTVRScAAEvHf1IS57M=
    "], {{0, 92}, {187, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{187, 92},
  PlotRange->{{0, 187}, {0, 92}}]], "Output",
 ImageSize->{191, 92},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->1650029928]
}, Open  ]],

Cell["J can be used as a shorthand notation for getJacobian", "ExampleText",
 CellID->264375314],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", "[", "model", "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1024216169],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
m7A=
    "], {{0, 39}, {549, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{549, 39},
  PlotRange->{{0, 549}, {0, 39}}]], "Output",
 ImageSize->{553, 39},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[5]=",
 CellID->1596666185]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1293636265],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", "model", "]"}], "==", 
  RowBox[{
   RowBox[{"S", "[", "model", "]"}], ".", 
   RowBox[{"G", "[", "model", "]"}]}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2118068913],

Cell[BoxData["True"], "Output",
 ImageSize->{33, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->311494181]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", 
   RowBox[{"model", ",", 
    RowBox[{"Type", "\[Rule]", "\"\<Flux\>\""}]}], "]"}], "==", 
  RowBox[{
   RowBox[{"G", "[", "model", "]"}], ".", 
   RowBox[{"S", "[", "model", "]"}]}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1865052328],

Cell[BoxData["True"], "Output",
 ImageSize->{33, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->1263165084]
}, Open  ]]
}, Closed]],

Cell["", "SectionFooterSpacer"],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[{
        Cell[
         BoxData[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, BaselinePosition -> Baseline, 
             ImageSize -> {6, 0}], CacheGraphics -> False], 
           Spacer[6]]]], "See Also"}], "SeeAlsoSection", 
      CellSize -> {5000, Inherited}], 
     TextData[{
       Cell[
        BoxData[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, BaselinePosition -> Baseline, ImageSize -> {6, 0}],
            CacheGraphics -> False], 
          Spacer[6]]]], "See Also"}]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["getGradient"]],"paclet:Toolbox/ref/getGradient"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["getStoichiometry"]],"paclet:Toolbox/ref/getStoichiometry"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"getJacobian",
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Wolfram Language", ButtonData -> "paclet:guide/WolframRoot", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 6, 1, 13, 37, 20.305833}", 
    "history" -> {"XX", "", "", ""}, "context" -> "Toolbox`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Toolbox Package Symbol", "language" -> "en", "paclet" -> 
    "Toolbox Package", "status" -> "None", "summary" -> 
    "getJacobian[model] constructs the Jacobian matrix for model", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "getJacobian", 
    "titlemodifier" -> "", "windowtitle" -> "getJacobian", "type" -> "Symbol",
     "uri" -> "Toolbox/ref/getJacobian"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion -> "6.0",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "6.0", 
  StyleDefinitions -> "Default.nb"]
]

