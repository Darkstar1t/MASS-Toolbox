Notebook[{
Cell[BoxData[GridBox[{
   {Cell["TOOLBOX PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"getMassActionRatios\"\>":>
       Documentation`HelpLookup["paclet:Toolbox/ref/getMassActionRatios"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Toolbox/ref/getDisequilibriumRatios\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Toolbox/ref/getDisequilibriumRatios"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                
                "http://reference.wolfram.com/language/Toolbox/ref/\
getDisequilibriumRatios.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$24424], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Toolbox/ref/getDisequilibriumRatios", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["getDisequilibriumRatios", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"getDisequilibriumRatios", "[", "model", "]"}]], 
      "InlineFormula"],
     "\[LineSeparator]returns the dissequilibrium ratios of all reactions in \
model."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          Cell[
           TextData[{
             Cell[
              BoxData[
               InterpretationBox[
                StyleBox[
                 
                 GraphicsBox[{}, BaselinePosition -> Baseline, 
                  ImageSize -> {6, 0}], CacheGraphics -> False], 
                Spacer[6]]]], "Details"}], "NotesFrameText"], 
          Appearance -> {Automatic, None}, BaseStyle -> None, 
          ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection", 
      CellSize -> {5000, Inherited}], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, BaselinePosition -> Baseline, 
               ImageSize -> {6, 0}], CacheGraphics -> False], 
             Spacer[6]]]], "Details"}], "NotesFrameText"], 
       Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellID->651133262],

Cell["", "SectionHeaderSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Ignore",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Ignore"], 
    RowBox[{"{", "}"}], Cell["\<\
Provide a list of species that should be ignored (in addition to other \
species that might already have been declared in model)\
\>", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True}}}}],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[{
        Cell[
         BoxData[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, BaselinePosition -> Baseline, 
             ImageSize -> {6, 0}], CacheGraphics -> False], 
           Spacer[6]]]], "Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
        Cell["(2)", "ExampleCount"]}], "PrimaryExamplesSection", 
      CellSize -> {5000, Inherited}], 
     TextData[{
       Cell[
        BoxData[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, BaselinePosition -> Baseline, ImageSize -> {6, 0}],
            CacheGraphics -> False], 
          Spacer[6]]]], "Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
       
       Cell["(2)", "ExampleCount"]}]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellTags->"PrimaryExamplesSection",
 CellID->20069322],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->150162275],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Toolbox`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1853183878],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Toolbox\>\"", ",", "\"\<Glycolysis\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->105650900],

Cell["Calculate the dissequilibrium ratios", "ExampleText",
 CellID->478526247],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getDisequilibriumRatios", "[", "model", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1506105105],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4lbqpkgzuHqTeZezqTB06fgXaGq3XAxFQLC1B8FvBawtBYvcRka7WNTUeVbA
tSNPg0ySkEADWQXXQOooyKHtkXW4TlUQRY2p0IBCRO5JD6nun2oiK4HxBneo
aaBhYPvl3ojbXB/UxirMcFOnPRA/6dbbfvFQLY5QC8tcpNpZHqrtMVSB89xz
e3ghjvh46Yi6vF6nzF1/CdeKOrYr4Ze0XXzU1l4FhSWvk603bPc3cSt1ETp8
bkEMompOL051MSux1S41UGLvRPAbAZmnYSvKIlvtLhZBDlUVa4RofFReU2Fm
8TwBqdt/4edTr8gt3n2hP82UWBB1ZGE+x20Tkl+8sT5ZxFZUt6Zw4esuZfUv
41YtiiGm992AimWeRizP89NeSqct91fPxTkerzoi8QUtobWr8uHlpqg1F8eV
ogClgcl5UY93YOQAmisC/UxYsGW7v4krqVmsKJq44pob2mnoInauW51UYTcN
4R/2Ivi1WZlPdMt1/bDbyEhMRfVB4tw3LJhPWYgc4Belj2CUUhrdskllKKc4
1QpOZZz6GnhnpRht4kWWaNg+xSm4Ni7W/URGFxGw/s5WxY1aYCVahez5ROxE
MJj4I0KIrumW36XF4ipStzsBeSYO4DLJaj87p4h2mTD+DfQUJZA4GpA0YD0s
G5FDQGgOXVZEt233N9GXunI0xIXUND7FOGeuFg+BlTU9NoWFQSX897qzg/0p
gb6AkBod8dmTruvETqqmih2kYA0Exk5St4tIWIUMDb7g2ygOJtgdvqCLXvFk
cdFqZJyS2AROffg5629saY5IIcJyl7v/zhz1ThyJ52gYZWJ/KoYFoZr/vHaN
FgcbyCpwlTmBPUhIsgPQSFNd0WaZhxTSrhM1F4Fo3C7rXZu5kc1FYttgqaFf
zSX5AAwjVSe6qup+sreVsTtxJN5E5hlOsrNRicQdKkfns0Fd11Td9O8vt7LM
I7uZJ0pISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEgsjjJysMgg
Rtx49uOtixa+On5Suh8QSrr0+5C6ktg+mjJQFDWummNTJcl4buf1Cl8dPynd
Dwj1h1yaZZauEyBYcvJJF4qWECcPLOtQLFS4xI+hjHw/fp09mMbmOefMJ2BV
6hCRiA6pziGbt/DV0VSprYsEzVg/p2f6Gen62LJQX3bp7xc+Gk0Z+n7gmYqC
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
EhISEhISEhISEhISEvPh/wLHsKhO
    "], {{0, 130}, {568, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{568, 130},
  PlotRange->{{0, 568}, {0, 130}}]], "Output",
 ImageSize->{572, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->484070700]
}, Open  ]],

Cell["\<\
\[Rho] can be used as a shorthand notation for getDissequilibriumRatios\
\>", "ExampleText",
 CellID->264375314],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]", "[", "model", "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->212236755],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4lbqpkgzuHqTeZezqTB06fgXaGq3XAxFQLC1B8FvBawtBYvcRka7WNTUeVbA
tSNPg0ySkEADWQXXQOooyKHtkXW4TlUQRY2p0IBCRO5JD6nun2oiK4HxBneo
aaBhYPvl3ojbXB/UxirMcFOnPRA/6dbbfvFQLY5QC8tcpNpZHqrtMVSB89xz
e3ghjvh46Yi6vF6nzF1/CdeKOrYr4Ze0XXzU1l4FhSWvk603bPc3cSt1ETp8
bkEMompOL051MSux1S41UGLvRPAbAZmnYSvKIlvtLhZBDlUVa4RofFReU2Fm
8TwBqdt/4edTr8gt3n2hP82UWBB1ZGE+x20Tkl+8sT5ZxFZUt6Zw4esuZfUv
41YtiiGm992AimWeRizP89NeSqct91fPxTkerzoi8QUtobWr8uHlpqg1F8eV
ogClgcl5UY93YOQAmisC/UxYsGW7v4krqVmsKJq44pob2mnoInauW51UYTcN
4R/2Ivi1WZlPdMt1/bDbyEhMRfVB4tw3LJhPWYgc4Belj2CUUhrdskllKKc4
1QpOZZz6GnhnpRht4kWWaNg+xSm4Ni7W/URGFxGw/s5WxY1aYCVahez5ROxE
MJj4I0KIrumW36XF4ipStzsBeSYO4DLJaj87p4h2mTD+DfQUJZA4GpA0YD0s
G5FDQGgOXVZEt233N9GXunI0xIXUND7FOGeuFg+BlTU9NoWFQSX897qzg/0p
gb6AkBod8dmTruvETqqmih2kYA0Exk5St4tIWIUMDb7g2ygOJtgdvqCLXvFk
cdFqZJyS2AROffg5629saY5IIcJyl7v/zhz1ThyJ52gYZWJ/KoYFoZr/vHaN
FgcbyCpwlTmBPUhIsgPQSFNd0WaZhxTSrhM1F4Fo3C7rXZu5kc1FYttgqaFf
zSX5AAwjVSe6qup+sreVsTtxJN5E5hlOsrNRicQdKkfns0Fd11Td9O8vt7LM
I7uZJ0pISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEgsjjJysMgg
Rtx49uOtixa+On5Suh8QSrr0+5C6ktg+mjJQFDWummNTJcl4buf1Cl8dPynd
Dwj1h1yaZZauEyBYcvJJF4qWECcPLOtQLFS4xI+hjHw/fp09mMbmOefMJ2BV
6hCRiA6pziGbt/DV0VSprYsEzVg/p2f6Gen62LJQX3bp7xc+Gk0Z+n7gmYqC
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
EhISEhISEhISEhISEvPh/wLHsKhO
    "], {{0, 130}, {568, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{568, 130},
  PlotRange->{{0, 568}, {0, 130}}]], "Output",
 ImageSize->{572, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->1108200064]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[TextData[{
 "Ignore",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Thread", "[", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Rho]", "[", 
        RowBox[{"model", ",", 
         RowBox[{"Ignore", "->", 
          RowBox[{"{", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Rho]", "[", 
        RowBox[{"model", ",", 
         RowBox[{"Ignore", "->", 
          RowBox[{"{", 
           RowBox[{"m", "[", 
            RowBox[{"\"\<adp\>\"", ",", "\"\<c\>\""}], "]"}], "}"}]}]}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=!=", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1760694990],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztna+v+zqaxq0dsnD/hf0HgocaLrI0q2Emd7Q3oyV3ozsrjULDgkZhYUFB
QQWropKgkJCQkIKSkoAALwgI6NhOf522p03T5MR23o/u96inTX3i5yaO7dfv
43//y//8yf4XhNDf/pX/+NMvf8e///6L+5//xn/5829/+++//vbrf/3Hb//7
619//f2Pf/kDf5Pxf//H/4nXBwD4cfZpiC2L/+dEWatAOeahgTLtNgrW7P7t
/QohklXtoa3yfPeyFMaaxx+8V455aK5MmxPLr+/eZpmH/bxPAaxMMLIwvwdo
WH1Qjnlopcw+ckh3rqutaC1264A3bJj3XVDAfy8Tl9oOFY2dW7BDU4YIeXv5
zWpfXTV9bRo6GBNeErKcoi5tZJdXH/cuxzx0Vqati2LHz6GMKfKyQ5Nj3rLV
h3a3sqyAtx55gC1vw9vBIiI44Fd1m4U2QhbBvDbrS/vIUow8fjllruWm1aHJ
+AVGbcIVcePi0L8c89BbGbYJHAtT16E0yBk/V36RcJqse7jkPvFz0ao0xekj
Tts0N+fd8puCbrZlgFHI7wHGRaC5eDjtXYRT1rsc89BZGZZ7iCTi1Tax/exQ
rS3kiXOv18fWwyfOWjR1u5X97JnYFC5xojjeFPJx2m55E1qIlrE6i9CrHPPQ
Wpk6s3k7RiklmIqWrVl7hPeb5O8RvzyKkIiGTraF5ZPrWTyVEHUc26aOn/BH
ZpWF/GlKMLJDcUf0Lcc8tFeGN2Ttze/n15lo+nhf5MV515lPQ3nlNyVXY3Mc
EjfsVHLPcszDbGXK2A3z+wHuHVVmYyx64IR4SX7f3+5bjnmAMgAAGEqWZf/Q
GX7+oN5g5lUPAHoCwdxPUEa99jyqYlU91oCqb6ix2QaO47jeZqdpyNJ09erU
8dJDF2eh8X3U/ntY7H97fO9QY1PX1cqxvOzxaE6xkOUdxqtXp16YV7mPcPh0
vP01mNsULrYQQpjwN52CDQ3mSoFyn5wrWIROKN8tIifMa7VClvcYrx7LbRmx
J1H57LCbYK5QZoMtv+KftOLPDgzmHm4reH59eqFUyPIO49UTUQC8LjObP6Se
NY5fgrnHU7WC8zcGBnNfV/CbchTBePXq1PXF+WzFhZ1+W72bYK5g72LnfM8M
DOZK+BPSO4l7et0mFPnfPFIVwnj1eAWD7oR3DsKb+wVtx8NugrmyUiFFItpo
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
AkQDAAAAAAC45585iQvs
    "], {{0, 242}, {181, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{181, 242},
  PlotRange->{{0, 181}, {0, 242}}]], "Output",
 ImageSize->{185, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]//TableForm=",
 CellID->392805217]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["", "SectionFooterSpacer"],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[{
        Cell[
         BoxData[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, BaselinePosition -> Baseline, 
             ImageSize -> {6, 0}], CacheGraphics -> False], 
           Spacer[6]]]], "See Also"}], "SeeAlsoSection", 
      CellSize -> {5000, Inherited}], 
     TextData[{
       Cell[
        BoxData[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, BaselinePosition -> Baseline, ImageSize -> {6, 0}],
            CacheGraphics -> False], 
          Spacer[6]]]], "See Also"}]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellID->1255426704],

Cell[TextData[Cell[BoxData[
 TemplateBox[{Cell[
    TextData["getMassActionRatios"]],"paclet:Toolbox/ref/getMassActionRatios"},
  "RefLink",
  BaseStyle->{
   "InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"getDisequilibriumRatios",
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Wolfram Language", ButtonData -> "paclet:guide/WolframRoot", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 6, 1, 13, 37, 17.520144}", 
    "history" -> {"XX", "", "", ""}, "context" -> "Toolbox`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Toolbox Package Symbol", "language" -> "en", "paclet" -> 
    "Toolbox Package", "status" -> "None", "summary" -> 
    "getDisequilibriumRatios[model] returns the dissequilibrium ratios of all \
reactions in model.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "getDisequilibriumRatios", "titlemodifier" -> "", "windowtitle" -> 
    "getDisequilibriumRatios", "type" -> "Symbol", "uri" -> 
    "Toolbox/ref/getDisequilibriumRatios"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion -> "6.0",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "6.0", 
  StyleDefinitions -> "Default.nb"]
]

