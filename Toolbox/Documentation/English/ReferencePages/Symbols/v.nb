Notebook[{
Cell[BoxData[GridBox[{
   {Cell["TOOLBOX PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Keq\"\>":>Documentation`HelpLookup[
       "paclet:Toolbox/ref/Keq"], "\<\"parameter\"\>":>
       Documentation`HelpLookup["paclet:Toolbox/ref/parameter"], "\<\"Km\"\>":>
       Documentation`HelpLookup["paclet:Toolbox/ref/Km"], "\<\"vmax\"\>":>
       Documentation`HelpLookup["paclet:Toolbox/ref/vmax"], "\<\"k2keq\"\>":>
       Documentation`HelpLookup[
       "paclet:Toolbox/ref/k2keq"], "\<\"kRev2keq\"\>":>
       Documentation`HelpLookup[
       "paclet:Toolbox/ref/kRev2keq"], "\<\"kFwd2keq\"\>":>
       Documentation`HelpLookup[
       "paclet:Toolbox/ref/kFwd2keq"], "\<\"keq2k\"\>":>
       Documentation`HelpLookup["paclet:Toolbox/ref/keq2k"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Toolbox/ref/v\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Toolbox/ref/v"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Toolbox/ref/v.html"], 
                StandardForm]], "Input", TextClipboardType -> "PlainText"]}, 
            Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$55953], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], "Toolbox/ref/v", 
             ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["v", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     "v[id]",
     "\[LineSeparator]represents the flux of a ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["reaction"]],"paclet:Toolbox/ref/reaction"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[{
        Cell[
         BoxData[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, BaselinePosition -> Baseline, 
             ImageSize -> {6, 0}], CacheGraphics -> False], 
           Spacer[6]]]], "Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
        Cell["(2)", "ExampleCount"]}], "PrimaryExamplesSection", 
      CellSize -> {5000, Inherited}], 
     TextData[{
       Cell[
        BoxData[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, BaselinePosition -> Baseline, ImageSize -> {6, 0}],
            CacheGraphics -> False], 
          Spacer[6]]]], "Examples", "\[NonBreakingSpace]\[NonBreakingSpace]", 
       
       Cell["(2)", "ExampleCount"]}]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellTags->"PrimaryExamplesSection",
 CellID->1407961742],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->490691501],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Toolbox`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1025058298],

Cell["Specify a flux", "ExampleText",
 CellID->861671355],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "[", "\"\<RxnID\>\"", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1314669788],

Cell[BoxData[
 InterpretationBox[
  SubscriptBox[
   StyleBox["v",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    FontColor->RGBColor[0, 0, 0],
    $CellContext`LineColor -> RGBColor[0, 0, 0],
    $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
    $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
    $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], 
   StyleBox["RxnID",
    StripOnInput->False,
    ShowSyntaxStyles->False,
    AutoSpacing->False,
    ZeroWidthTimes->True,
    FontColor->RGBColor[0, 0, 0],
    $CellContext`LineColor -> RGBColor[0, 0, 0],
    $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
    $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
    $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
  Toolbox`v["RxnID"]]], "Output",
 ImageSize->{39, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->195882933]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->112024080],

Cell["Retrieve all fluxes in a model", "ExampleText",
 CellID->1593037788],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Toolbox\>\"", ",", "\"\<Glycolysis\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1040998252],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model", "[", "\"\<Fluxes\>\"", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->317718461],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXa+P7LoVdltS2H+hpNC41LDI0qvKTN5Tn59KXq3XSlVoWGBYWFBQ0KBB
Q4JCQiJVIQGjJw0JCEiBQcD02Jkf+TG7m53Es3N3/eneq5nsbL7j4+PjY0+u
vz/+8M/v+G8RQv/6Pfzz3ff/Ib/88r3z1z/Am7/9/K9//PTzj3//y8///vGn
H3/58w+/g4t/gr///Q1C6vXRwsLCwuKD0aSRHyaHjzbDwsLC4mshcakIk6pp
P9oQCwsLiy+FyudB/dFGWFhYWHw91IEIqo82wsLCwuLrwaZfCwsLiw/BIP3W
WYDpdS8iCxgLcyOsjyKy1F+Z+nVYn3ysJc/jhI9DEwj/Wv3KnCIU5M3ldVjI
8W+0ZRhsm94FWW6Dbfk+2jlE81BnsRdlj6EudwGjlIng8L8iCHbvtvhba3W5
9bkQbpCMPir322BTGKWeDbkL1P3kfvcOk1Y0TH5YJMC4E1w4brhf4k6zvbM+
9T3Z5knRlknAxKbf5swniMXwYr/hCAfN9JeahGCv/ytN6mIneS/320Tz0OSx
G6aPoG4zgngh26aqW3AC8u74ynIedRN50etWPabVsqmrcoPxuKUy94nzDva1
+vqmjT4mSaOD0H3PfLSWYWYj4VWo7ikcpJq/BCZ7Z33q+7LNM6LdexixaFgz
1AlCOKkOHkJuouriIhLurnsquHSZd2hSipjrcIwQ85MWHJJ5xFWDMfUZjwbL
B9m8/EDbm0SycKDS5BQj7MT6tu0h4JRQSjAiIqrKmGJCCXHjG2XPutSyAC5o
MSIEmAsIAoo9iJY69Qkfp8pl1LlDNBGFxgkoDYrYYVwwgjFx4K001+pjm4YO
0MAf71JgSNXSc3qRO4/BT8E87I9z3TLq4yEJoFHwB5oeFU1bpQ68IZgwr2iU
/xnjXPU8jXNlDlTgyhRtSwbpN/MxdRxOlWnDh9iNBmFjMBLeolaXGp/QU/qF
z0PXYcIdQZQTBl/pLOwdmO4h6gBdYBSRI1yXgx2YJRXcuE18jhW5k02monWd
cGe2eVLUHvNHX71tBbQVMoCz795XG0wCqeZ5VzVcQhGIIhgCbcERy6VyCPXT
PBZYxP2qWBYhjA00rK7fQdSkBJEdrKzUwoRmspv4wPONC9d1L4O3q+7DQ6xO
rV2lyv6qY4VBR4OyiDByRgumpdSKaNcRta2KJqgQsKuWt3lIiU56ploN83Fe
1O2xKSJ0qehUevG7103uI/16vxHEG7Avpq49qOLA34nT1TZtXRZ7oKojBgOz
huyKsLcH2/JAl0lNgJGfKlsEommjbUNqtmrLCNNQrmXYm0FoLhJmxD/455p+
1edFcUgYi8oUctS1RFxqSVsw6B3FeHDA21JXrTyCC2XEaZDXKfSe2sU97FzU
c74RJ9ybbZ4SN558aPexakd82WCRMO63dbNhJFYDIIUs0J951YjQ8NLBzCdh
3arrpJeWZvOJAk0EHsbUL8od1Wm/w2U2NEqtX14TEcxBVDd5lIVWoD522zv+
pY6CcPMy9U4t+c8tNdJqyGW7AOpN4QjKgl76PaXizKeu7mJIhiP2xdQyYsRL
isSHZJZ3d1SVHhOCwWirG+0FfT1T9nT/avtOQQgOOX2gX66bD0JzkTAr/gfp
l5KgkZkb5LIYdNBSS2QGv04Yo7AiwxyC8RKTXSTAWzfVRrQZHW5Vre6Eu7PN
U2LWg2d14hFY+bFQe/wS3vU58n2Y8uoGpqduirzisOGIRvPnozERcvQ65FTh
yCJiwouiOO9ZfDMRrU59HDS8+wDLmjqkp0XTatT6Bg4Rl50FiG2xVbbsN/yU
YQy1WqYIMV2ElA47h7He6u8Mq3an0hReTNmXtVrGgnthGO9Oy8kMyqhY2VLG
jqeqXw+LraaJsZqboAzrKsAK6rFT+u1MatJRBjAbhOYiYVb81x5W5ejJEp1+
HT9rivH8uCwwYMHLcl0atFLdQ+fbbiJWbj9sBNK905Yh6lUOJpywYrZ5Asx8
7hfajpyd/qDMGPHP6Zdph8ByQKWFzjMX5+cR/JLepngHBkRqIw8mXDU5qmwk
1QITCyE4416cdfs8QEonhcfq1JrpMhGfQ/14Gn15r8uXUmtkAUNqg5fvDm0e
nG3B1+WtkVYfq4BhYIIyh1yq3+4ixiLM1ZcFRNkFP+fBYO93MTXUNghDrcs5
F35WtVUaYFVwARUJsrqreQgFV5C4UI7fb13lFvUB3o3Kk0N0N13sMB6E5iJh
XvzrUMFq27lX/TZF0A+P5TFZbj2gZoxg5h/UOoh55/SriaqQE70Rf+odc05Y
Ndt8OCpIv4YsLpNNelgwF53TnTzfI/VYoHf2JUyyyHnF7NWp52Mp9RmtbKTe
+03VQq+G94+hBtqpLU3vopQ3vt9Y7PCEQUmjbx9hJLqypr1SNWm3tzD0Qvt2
/3ymIHyJ+s2vnFaKyba51fXXH9+KjIeNxLXG3WPRhIxP1kzPAZk7POxPpVAR
EUy54JTyODNp9IT6A1FETjD9OvmzoQo4VNWcM8rduJoMY1h3i+Ddz5WtgGcK
wsdRPw+eaSSaQLvfweLS3XyOJ5ktLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCws
LMyiPSR+sFl0MpKFhYWFxR1omzJRp2t+4kc4LCwsLJ4WiSd2n/4BUgsLC4vn
Q+o7iU2/FhYWFg/HnPT7NcVHLLWlfjyex5IRvqBhD2jyrOp3jgKILH0hhOPu
Jl/m7bfhpmjuUX6ZSW0I37juzJ1Y1tfGqQ1hVeqz7tJJ8+gBlrykADVEFXt+
Ov3P2yYNmwfzhk3U0MzeuZ17yjuk33SGWTMUQGRdVxuB3XSczXOPqsOx71J+
mUdtCt+27sy9WNLX5qlvWZNHYbbUQys6/Ky7VHuYpO9PUSsqQA1Rx66X3J3l
DMakecMmamjm7nw6l0/p0kRvDg8lERIm9ZtNnyE+cuyd+akANRLrTpxDXta8
ovxyXFkQp4kFxRhT4XBwnp9OVWmMUY9lgEwqEI0kV2TE+ekswMOWO1slDydE
EPnqE2x8RMlCoZnjsK9HMkBHrRNEtF9EmI6IVne4OmhbHcWpDsA02Ncyd5jw
HHZR1Jq0eqS71ASUCNfR/vdHEb+uDJO+4/VM4yYPhT6gHl7oU0Bl7Gg1Kup2
5ZssIg6WMbKyDNO7R+KjDJuooZm7M0yFXTaOGNVPNbwmuqQPTSXbGavItwVx
hkMSSgDiK7UaKJO8tH5J+eW4viBO42Mcl6VPRbZPICZ/HavSmKOeyAA9UHfm
cuA59IKjQkWJ7yAWQlkxOoVxBfGjUfodygC1hw1CVC0n2yrL9qtS3xA/Uj9J
TkJMEwWiFR0+VtQaix+NdZfUecVaekzGDAe97l9dhkmhrwB1PmdencnZ9Zc6
p7Ty8EkFQ3nJhAzTHSPxMYZN1NBW64uX7iy1CG97fEV06agfPJspivq2IM5g
SF4VebqLLym/HNcXxFFHvmeyDp2oUUIn/q8jVRqD1BMZoAfqzugjqXnZHhws
9O/0RGfWpdYYrXQGMkCpe9HgWJ16Kn6UutQ776CNFYhWpJ4oao1aPdFdUv7v
Nh8yvf+2nhMmMkzHgaLHNf0OFKCuEpymZJjuHInmDZv2ndk7w4RyqpZfEV06
LnvwbCKIAwOBuOeBsBO4u7UuyupXlF+OKwviqLBXnS5Crf+lOn2oSmOOeiID
9EDdGWVEBGFP+Ulx+MX0u5Rao9/XIxkgWcCSyu1WaNVhvKm3uvjRYevw6DQ6
JgpE61FPFLVGrZ7oLl39P5iqllsykWHSLb8qQOnvWdRYKyOOr/N+PchyJmSY
7hyJ5g2b9F0fa9+5Cug1Xb8uurTsud+xIE6dBWobjggoANv9Vu1M0bM0zAvK
L8f1BXGa85wLnZ4z4v86UaUxRn0cywA9UHdGoS3g4uZw0lwKCLuZflcRP+r3
9UgGCOxIA66sg0rI2fYD24j4UZ0y1b+EeclUgWg16omi1rjVY92lJqDskn77
KpCryzBdPdMpQGmHQN9wR/ROpL/aY0qG6c6RaN6wSd9dsPqd85B2bSQYiah4
RXTpaOK/Xci+/MgM6ReDgjgn3FalMUP9OBmgW5IrdR7iyf7S+tQX9Pt6qisD
VyYkRsWPWvN9PaEdt/qm7tLKltyUYdLW9BSg5j77tKZhJ+J7RuIDDHvwnfu4
Kbp0VF8V9Suaz4lHqtI8TgZoIrmS+hxqzfufn/wU+DAFoofiDRmmp8XX6J35
2LvUKb+d7rOwsLD4BJDlhiISTB7BtbCwsLCwsLCwsPgK+D+s/7TN
    "], {{0, 38}, {469, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{469, 38},
  PlotRange->{{0, 469}, {0, 38}}]], "Output",
 ImageSize->{473, 38},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->714852827]
}, Open  ]],

Cell["Construct flux balances of model", "ExampleText",
 CellID->1507475767],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"0", "==", 
    RowBox[{"model", ".", 
     RowBox[{"model", "[", "\"\<Fluxes\>\"", "]"}]}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->133148663],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnSuT60y0npWEBOYv5A80Dm0Y1FVJhTVJKkepkJOuk1QlomKCYmJCQkKD
jEyMRERERARcp8rEQEAHNBBwVrfkGY1l+SpfZuZ9an/7s+VLL7XVq1fL1rP/
/X/7X//J/deO4/zvf0t//af/+n/5P/3Tf/X+87+jO//lH//3//wf//gP//0/
/uP/+Yf/8Q//9B/+27+hjf/vXzmOpP/M7R0AABzQbmLFKT843Mu27SNa2GSJ
ZKYFoaKyeUQLAIC50B8uZYMgr6oPnzKDt567gXadUjYIFsVmU0SS8kKi524C
ADAbuqBE8LHt7qyV44TF/BN5XfdpQOc+tVAPH8ojJqLPLXkkZVzMHoCl3VTr
cTr6vQG8fH+PgwDeHF3FNEi3TelxudzUH9IJsvr7U9p1kWd5Tv+Vm3pTdrez
cnNL6ihj6fD42yt1IRwn6hKRvR2X19cRuoyi5bmX1aEMt0deO0cAF3FHAG0V
R4thv+lqES2qRzU3QbWMpBBSRZt/uaTDJ3jeJz5nABd0+C+hyQOHxfV2Rcv9
uKpXHh/nhGL5kX580H+UCMrVwt5OV2U9frd6sx6wOehoys+0iEhHc1ceckem
dGNNyxgW3ZJrmhV3giMBDQLbbHJP+vlmMw7stgB0kcT5pcHeGwDtIAuGr2oy
n3mrRzV3lDbnjlvqttnW7QUdfuJIeM4nPm8Apzv8V9FkzBFFf2axCZxxnbBr
P/l+e4ReJWEQ9gRBMhz9m1VICSE+ujCpV47DVtsNte6vzMxWJspfbuxjlS+D
za7NYo8xTn8Cm6vL1JOukmaDZ96yyQQL6P91FnI3GbWhVzFF5DOHB1F0ENjN
AZhzpowLzlRc6DKV0nXpjiPSYnyo3h0A7aAjfc+l1C3DVWuTOfczejgLpZsU
MzenS4/KAVcwh3mpeXPaQcHMaWLOuUrK8x0+fSTcFgCthCLqX2G6mCJonh7A
yQ7/ZdShOXSWdJitF7TYF6OpTy9CT3mep1S8KpaRv7+9ubiJNk9cc5pxWTVN
vd1um1FCWSjqe/Z1hnP7wXikzWzg2w+C1i9l3e6aMnHs7EB5nvmmdCxiwcPc
HKIiqsqEOd50GdhEanJGuDYAwjxiDieTH5s8dFiwphtFND3v3BGApjnaSSjb
tKXryEKbQ1SEWZEqptKJPb6juSbjDl/SQDKltci7BmpTq5jx0+4u6/BTXBuA
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
11wU39DBoXxPMIfJcBTQ/fGUHpUDrnl7LzW9TcebMOIvh2JSSdkZPCiuOgu5
m4xr8Xs/kVEAxw6AJ7vXaCVS1u2uKRNnnw/NIyZ+k2iMpoAFxnhURNOJronU
ZA68Vv7W1lW5pkDqRDpm5joMoImYE5pDeq0cYYwKxVPlbzPv/txyuXO9bRjm
BJqNeWgOAyoeaPa5rDPv2N/mcH8PP24KwHr/1h+KGy+H8XvYoaFTyaLjtfc9
8WTc4WYlZWp7kXdvX5vizQzg1lpBRFSVCXO821ZC1wZw9AB4rnttRytIStLK
U0L250MyXwRZ38cmwl6tlk9rlBpajE7VV1fL33QVUVkglZLUN/VhAF9h7G1s
z5W/zbz7c8vlzn7cu285gUZcv1Pdxss6c879Pfi487CPbe/6M36tbu2Q29XN
4+L57Iqhj9Qcdfbj4F+Sseu4NoDpA+BZ7jWdURFnM1jlyb4fNgvPTfpdoIOE
qYXdmjIWznJC4LT8LfdpkWAiqlIvMHXCQQAbj/KqCXTrOfuc8ET52/08WS73
vbcNmZmg+ntLRdWZaWbp8T4nzNqZhwGM9vfg494u+3JxawMadvu3Jc+M8Tie
rbD7snO3+77vdnGXN3Us+uL/0QG8yC44dK9ZzZoQUlKu3n9vYn1rtMKXwarL
WlxQsuRpOdc5wlPyt21GiwMuTUA8yutxAHZJxWzEbteHz5S/zcGT5XLD3rYt
5ZHV6SlalrbrhTmPI/a9PX9n7k7v78HHTQEF3JzNMp9ulA8tf6ZgnEfM+y0e
c+pE0HKepvL9Fy5fc3d3O9oP3qnF45wBvIldUDfjXW27OsUo3E0x2T5KnH5U
/tbqzxrpeAD0hAfF80fQwyr01b05+Lg7Du8/jv3wf1kPvDyA69FlMlCzPoIz
8rfHBwD+MLrw3Jeafl8eAAAAAAAAAAAAAAAAAAAAAADgLwP3GgDgC7jXAAAD
5nOvTfGHJV3vEgAAlzOne22yjd/tZLuAm61rrW4arObAU5nXvTYlhvrVTrav
AOa1rvVX8AnGVfK8a1gBmNO9Ni2G+glOtqZIafwRfQCJp3zf5UbCtTKnXttV
6DKCe/mRITq/dU03dfceiRRW4HA6AADmYmb32hTv7mRrS9k7JTaeY0w7ZmZ3
zQRdJa6IijoLHG7OCWyWvnO9cu18AFPWNW0Fnu3u/gAAuJB53WuTrby5k03n
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
    "], {{0, 376}, {
    348, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{348, 376},
  PlotRange->{{0, 348}, {0, 376}}]], "Output",
 ImageSize->{352, 376},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]//TableForm=",
 CellID->1507942071]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, Inherited],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, Inherited]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   Inherited]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[{
        Cell[
         BoxData[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, BaselinePosition -> Baseline, 
             ImageSize -> {6, 0}], CacheGraphics -> False], 
           Spacer[6]]]], "See Also"}], "SeeAlsoSection", 
      CellSize -> {5000, Inherited}], 
     TextData[{
       Cell[
        BoxData[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, BaselinePosition -> Baseline, ImageSize -> {6, 0}],
            CacheGraphics -> False], 
          Spacer[6]]]], "See Also"}]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 14]},
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Keq"]],"paclet:Toolbox/ref/Keq"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["parameter"]],"paclet:Toolbox/ref/parameter"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Km"]],"paclet:Toolbox/ref/Km"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["vmax"]],"paclet:Toolbox/ref/vmax"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["k2keq"]],"paclet:Toolbox/ref/k2keq"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["kRev2keq"]],"paclet:Toolbox/ref/kRev2keq"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["kFwd2keq"]],"paclet:Toolbox/ref/kFwd2keq"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["keq2k"]],"paclet:Toolbox/ref/keq2k"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"v",
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Wolfram Language", ButtonData -> "paclet:guide/WolframRoot", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 6, 1, 13, 38, 24.724598}", 
    "history" -> {"XX", "", "", ""}, "context" -> "Toolbox`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Toolbox Package Symbol", "language" -> "en", "paclet" -> 
    "Toolbox Package", "status" -> "None", "summary" -> 
    "v[id] represents the flux of a reaction.", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "v", "titlemodifier" -> "", "windowtitle" -> 
    "v", "type" -> "Symbol", "uri" -> "Toolbox/ref/v"}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion -> "6.0",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "6.0", 
  StyleDefinitions -> "Default.nb"]
]

