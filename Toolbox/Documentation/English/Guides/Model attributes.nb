Notebook[{
Cell[BoxData[GridBox[{
   {Cell["TOOLBOX GUIDE", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Constant\"\>":>Documentation`HelpLookup[
       "paclet:ref/Constant"], "\<\"Variables\"\>":>Documentation`HelpLookup[
       "paclet:ref/Variables"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"GuideFunction"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Toolbox/guide/Model attributes\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Toolbox/guide/Model attributes"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Toolbox/guide/Model \
attributes.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$1731], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Toolbox/guide/Model attributes", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["Model attributes", "GuideTitle",
 CellID->942062912],

Cell[TextData[{
 "For each model, the MASS toolbox provides a series of mutable and immutable \
attributes with associated ",
 StyleBox["getter",
  FontSlant->"Italic"],
 ", ",
 StyleBox["setter",
  FontSlant->"Italic"],
 ", ",
 StyleBox["updater",
  FontSlant->"Italic"],
 " Functions (see ",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"Model", " ", "construction", " ", "and", " ", "manipulation"}],
    BaseStyle->"Link",
    ButtonData->
     "paclet:Toolbox/tutorial/Model construction and manipulation#115847815"],
    TextForm]]],
 "). In general, when working with model attributes it is very helpful to use \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s command completion capabilities (see ",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"Edit", " ", ">", " ", 
     RowBox[{"Complete", " ", "Selection"}]}],
    BaseStyle->"Link",
    ButtonData->"paclet:ref/menuitem/CompleteSelection"], TextForm]]],
 ") to complete either the various getter, setter, updater functions or the \
attribute names directly."
}], "GuideAbstract",
 CellFrame->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {{0, 0}, {1, 0}}, 
   Inherited],
 CellID->2001916300]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Reference"
}], "GuideReferenceSection",
 WholeCellGroupOpener->True],

Cell["", "SectionHeaderSpacer"],

Cell[CellGroupData[{

Cell["Mutable attributes", "GuideFunctionsSubsection",
 CellID->1080204154],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ID"]],"paclet:Toolbox/ref/ID"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Model identifier (String)"
}], "GuideText",
 CellID->203374175],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Name"]],"paclet:Toolbox/ref/Name"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Model full name (String)"
}], "GuideText",
 CellID->1463276848],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Constraints"]],"paclet:Toolbox/ref/Constraints"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Constraints on model fluxes ({",
 Cell[BoxData[
  InterpretationBox[
   SubscriptBox[
    StyleBox["v",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
   Toolbox`v["ID"],
   Editable->False,
   Selectable->False]]],
 " \[Rule] {",
 StyleBox["lb",
  FontSlant->"Italic"],
 ", ",
 StyleBox["ub",
  FontSlant->"Italic"],
 "}, ...})"
}], "GuideText",
 CellID->1568162591],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["InitialConditions"]],"paclet:Toolbox/ref/InitialConditions"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Model initial conditions ({",
 Cell[BoxData[
  InterpretationBox[
   SuperscriptBox[
    StyleBox["x1",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], 
    StyleBox["c",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
   Toolbox`metabolite["x1", "c"],
   Editable->False,
   Selectable->False]]],
 " \[Rule] ",
 StyleBox["val",
  FontSlant->"Italic"],
 ", ...})"
}], "GuideText",
 CellID->1759487399],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Parameters"]],"paclet:Toolbox/ref/Parameters"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Model parameters ({",
 Cell[BoxData[
  InterpretationBox[
   SubsuperscriptBox["k", 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], "\[LongRightArrow]"],
   Toolbox`rateconst["ID", True],
   Editable->False,
   Selectable->False]]],
 " \[Rule] ",
 StyleBox["val",
  FontSlant->"Italic"],
 ", ",
 Cell[BoxData[
  InterpretationBox[
   UnderscriptBox["K", 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
   Toolbox`Keq["ID"],
   Editable->False,
   Selectable->False]]],
 " \[Rule] ",
 StyleBox["val",
  FontSlant->"Italic"],
 ", ...})"
}], "GuideText",
 CellID->854895803],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GPR"]],"paclet:Toolbox/ref/GPR"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Gene-protein-reaction associations ({\"",
 StyleBox["RxnID",
  FontSlant->"Italic"],
 "\" -> p[\"",
 StyleBox["ID",
  FontSlant->"Italic"],
 "\"], p[\"",
 StyleBox["ID",
  FontSlant->"Italic"],
 "\"] \[Rule] g[\"",
 StyleBox["ID",
  FontSlant->"Italic"],
 "\"], ...})"
}], "GuideText",
 CellID->1436659373],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Ignore"]],"paclet:Toolbox/ref/Ignore"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Species that should be ignored under mass-action considerations (List of \
species)"
}], "GuideText",
 CellID->155580158],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BoundaryConditions"]],"paclet:Toolbox/ref/BoundaryConditions"},
   
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Boundary conditions for species (list of species)"
}], "GuideText",
 CellID->1775438790],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Constant"]],"paclet:ref/Constant"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Constant species (list of species)"
}], "GuideText",
 CellID->514468465],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ReversibleColumnIndices"]],
    "paclet:Toolbox/ref/ReversibleColumnIndices"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Columns in stoichiometry matrix that correspond to reversible reactions \
(list of integer indices)"
}], "GuideText",
 CellID->902328433],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CustomRateLaws"]],"paclet:Toolbox/ref/CustomRateLaws"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Custom rate laws  ({",
 Cell[BoxData[
  InterpretationBox[
   SubscriptBox[
    StyleBox["v",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
   Toolbox`v["ID"],
   Editable->False,
   Selectable->False]]],
 " -> equation, ...})"
}], "GuideText",
 CellID->1059384381],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CustomODE"]],"paclet:Toolbox/ref/CustomODE"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Additional algebraic or differential equations (list of equations)"
}], "GuideText",
 CellID->286374190],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ElementalComposition"]],
    "paclet:Toolbox/ref/ElementalComposition"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Elemental composition of species ({",
 Cell[BoxData[
  InterpretationBox[
   SuperscriptBox[
    StyleBox["H2O",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], 
    StyleBox["c",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
   Toolbox`metabolite["H2O", "c"],
   Editable->False,
   Selectable->False]]],
 " \[Rule] 2 ",
 StyleBox["\"H\" + \"O\"",
  FontSlant->"Italic"],
 ", ...})"
}], "GuideText",
 CellID->580158403],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Notes"]],"paclet:Toolbox/ref/Notes"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Notes (String)"
}], "GuideText",
 CellID->49329700],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["UnitChecking"]],"paclet:Toolbox/ref/UnitChecking"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " If units should be checked (Boolean)"
}], "GuideText",
 CellID->1348117107],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Objective"]],"paclet:Toolbox/ref/Objective"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans",
  FontWeight->"Bold"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Objective that should be optimized in COBRA related methods (",
 Cell[BoxData[
  InterpretationBox[
   SubscriptBox[
    StyleBox["v",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
   Toolbox`v["ID"],
   Editable->False,
   Selectable->False]]],
 " or ",
 Cell[BoxData[
  InterpretationBox[
   SubscriptBox[
    StyleBox["v",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
   Toolbox`v["ID"],
   Editable->False,
   Selectable->False]]],
 " + ...)"
}], "GuideText",
 CellID->95893632],

Cell["\t", "GuideDelimiterSubsection",
 CellID->311258892]
}, Open  ]],

Cell[CellGroupData[{

Cell["Immutable attributes", "GuideFunctionsSubsection",
 CellID->1649878722],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Stoichiometry"]],"paclet:Toolbox/ref/Stoichiometry"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Stoichiometry matrix"
}], "GuideText",
 CellID->1202830590],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SparseStoichiometry"]],
    "paclet:Toolbox/ref/SparseStoichiometry"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Sparse stoichiometry matrix (SparseArray)"
}], "GuideText",
 CellID->1657245641],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Reactions"]],"paclet:Toolbox/ref/Reactions"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Model reactions (List of reactions; same order as rows in stoichiometry \
matrix)"
}], "GuideText",
 CellID->464586697],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Exchanges"]],"paclet:Toolbox/ref/Exchanges"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Exchanges reactions in model (List of reactions)"
}], "GuideText",
 CellID->58075987],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Variables"]],"paclet:ref/Variables"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Time dependent variables in model ({v[t], ...})"
}], "GuideText",
 CellID->1125537771],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Species"]],"paclet:Toolbox/ref/Species"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Model species (List of species; same order as rows in stoichiometry matrix)"
}], "GuideText",
 CellID->1710156919],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Fluxes"]],"paclet:Toolbox/ref/Fluxes"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Model fluxes (List of species; same order as columns in stoichiometry \
matrixrows)"
}], "GuideText",
 CellID->1346827803],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ForwardRateConstants"]],
    "paclet:Toolbox/ref/ForwardRateConstants"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " All forward rate constants in model ({",
 Cell[BoxData[
  InterpretationBox[
   SubsuperscriptBox["k", 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], "\[LongRightArrow]"],
   Toolbox`rateconst["ID", True],
   Editable->False,
   Selectable->False]]],
 ", ...})"
}], "GuideText",
 CellID->1877354421],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ReverseRateConstants"]],
    "paclet:Toolbox/ref/ReverseRateConstants"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " All reverse rate constants in model ({",
 Cell[BoxData[
  InterpretationBox[
   SubsuperscriptBox["k", 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]], "\[LongLeftArrow]"],
   Toolbox`rateconst["ID", False],
   Editable->False,
   Selectable->False]]],
 ", ...})"
}], "GuideText",
 CellID->1866012023],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EquilibriumConstants"]],
    "paclet:Toolbox/ref/EquilibriumConstants"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " All equilibrium constants in model ({",
 Cell[BoxData[
  InterpretationBox[
   UnderscriptBox["K", 
    StyleBox["ID",
     StripOnInput->False,
     ShowSyntaxStyles->False,
     AutoSpacing->False,
     ZeroWidthTimes->True,
     FontColor->RGBColor[0, 0, 0],
     $CellContext`LineColor -> RGBColor[0, 0, 0],
     $CellContext`FrontFaceColor -> RGBColor[0, 0, 0],
     $CellContext`BackFaceColor -> RGBColor[0, 0, 0],
     $CellContext`GraphicsColor -> RGBColor[0, 0, 0]]],
   Toolbox`Keq["ID"],
   Editable->False,
   Selectable->False]]],
 ", ...})"
}], "GuideText",
 CellID->212889773],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["IrreversibleColumnIndices"]],
    "paclet:Toolbox/ref/IrreversibleColumnIndices"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " Columns in stoichiometry matrix that correspond to irreversible reactions \
(list of integer indices)"
}], "GuideText",
 CellID->1844088774],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Rates"]],"paclet:Toolbox/ref/Rates"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " overall rate laws of model (list of equations; same order as columns in \
stoichiometry matrix)"
}], "GuideText",
 CellID->1164001394],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ODE"]],"paclet:Toolbox/ref/ODE"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " overall ordinary differential equations of model  (list of equations)"
}], "GuideText",
 CellID->1637074410],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Compartments"]],"paclet:Toolbox/ref/Compartments"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " compartmens in model (list of compartments)"
}], "GuideText",
 CellID->1942888435],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Genes"]],"paclet:Toolbox/ref/Genes"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " genes in model (list of genes)"
}], "GuideText",
 CellID->749123506],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GeneAssociations"]],"paclet:Toolbox/ref/GeneAssociations"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " reaction-gene associations ({\"RxnID\" -> g[\"ID\"], ...})"
}], "GuideText",
 CellID->246966862],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Proteins"]],"paclet:Toolbox/ref/Proteins"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " proteins in model (list of proteins)"
}], "GuideText",
 CellID->54318291],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ProteinAssociations"]],
    "paclet:Toolbox/ref/ProteinAssociations"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " reaction-gene associations ({\"RxnID\" -> p[\"ID\"], ...})"
}], "GuideText",
 CellID->1833643630],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Enzymes"]],"paclet:Toolbox/ref/Enzymes"},
   "RefLink",
   BaseStyle->"InlineFunctionSans"]], "InlineFunctionSans"],
 " ",
 StyleBox["\[LongDash]", "GuideEmDash"],
 " enzymes in model (list of enzymes)"
}], "GuideText",
 CellID->1658154960]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Model attributes",
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "GuideColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Wolfram Language", ButtonData -> "paclet:guide/WolframRoot", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 6, 1, 13, 36, 20.479002}", 
    "history" -> {"0.1", "", "", ""}, "context" -> "Toolbox`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Toolbox Guide", "language" -> "en", "paclet" -> "Toolbox", "status" -> 
    "None", "summary" -> 
    "For each model, the MASS toolbox provides a series of mutable and \
immutable attributes with associated getter, setter, updater Functions (see \
Model construction and manipulation). In general, when working with model \
attributes it is very helpful to use Mathematica's command completion \
capabilities (see Edit > Complete Selection) to complete either the various \
getter, setter, updater functions or the attribute names directly.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$1636, "title" -> 
    "Model attributes", "titlemodifier" -> "", "windowtitle" -> 
    "Model attributes", "type" -> "Guide", "uri" -> 
    "Toolbox/guide/Model attributes"}, "SearchTextTranslated" -> ""},
FrontEndVersion -> "6.0",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

