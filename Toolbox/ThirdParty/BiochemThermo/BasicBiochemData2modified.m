(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(*BeginPackage["BasicBiochemData2`"];*)
(*Modified by Niko Sonnenschein 06/16/11*)
BeginPackage["BiochemThermo`BasicBiochemData2`"];


(*Off[General::spell,General::spell1];*)

calcdGmat::usage="calcdGmat[speciesmat_] produces the function of pH and ionic strength (is) that gives the standard transformed Gibbs energy of formation of a reactant (sum of species) at 298.15 K.  The input speciesmat is a matrix that gives the standard Gibbs energy of formation, the standard enthalpy of formation, the electric charge, and the number of hydrogen atoms in each species. There is a row in the matrix for each species of the reactant. gpfnsp is a list of the functions for the species.  Energies are expressed in kJ mol^-1.";
(*calcdG3I::usage="calcdG3I[reactantname_] produces the standard transformed Gibbs energies of formation at 298 K, pH 7, and ionic strengths of 0, 0.10, and 0.25 M.  The reactant name calls a function of pH and ionic strength or a constant.";
calcdG5pH::usage="calcG5pH[reactantname_] produces the standard transformed Gibbs energies of formation at 298 K, ionic strength 0.25 M and pHs 5, 6, 7, 8, and 9.  The reactant name calls a function of pH and ionic strength.";*)
calcdHmat::usage="calcdHmat[speciesmat_] produces the function of pH and ionic strength that gives the standard transformed enthalpy of formation of a reactant (sum of species) at 298.15 K.  The input is a matrix that gives the standard Gibbs energy of formation,the standard enthalpy of formation, the electric charge,and the number of hydrogen atoms in the species in the reactant.  There is a row in the matrix for each species of the reactant.  dhfnsp is a list of the functions for the species.  Energies are expressed in kJ mol^-1.";
(*calcdH3I::usage="calcdH3I[reactanth_] produces the standard transformed enthalpies of formation at 298 K,pH 7,and ionic strengths of 0,0.10,and 0.25 M.The reactanth name calls a function of pH and ionic strength or a constant.";
calcdH5pH::usage="calcdHpH[reactanth_] produces the standard transformed enthalpies of formation at 298 K, ionic strength 0.25 M and pHs 5, 6, 7, 8, and 9.  The reactanth name with hf calls a function of pH and ionic strength or a constant.";*)
(*calctrGerx::usage="calctrGerx[eq_,pHlist_,islist_] produces the standard transformed Gibbs energy of reaction in kJ mol^-1 at specified pHs and ionic strengths for a biochemical equation typed in the form atp+h2o+de==adp+pi.  The names of the reactants call the corresponding functions of pH and ionic strength. pHlist and islist can be lists.";*)
(*calckprime::usage="calckprime[eq_,pHlist_,islist_] produces the apparent equilibrium constant K' at specified pHs and ionic strengths for a biochemical equation typed in the form atp+h2o+de==adp+pi.  The names of the reactants call the corresponding functions of pH and ionic strength. pHlist and islist can be lists.";*)
calcpK::usage="calcpK[speciesmat_,no_,is_] calculates pKs of weak acids.";
calcdGHT::usage="calcdGHT[speciesmat_] calculates the effect of temperature on transformed thermodynamic properties.";
(*calcGef1sp::usage="calcGef1sp[equat_,pH_,ionstr_,z1_,nH1_] calculates the standard Gibbs energy of formation of the species of a reactant made up of a single species.";
calcGef2sp::usage="calcGef2sp[equat_,pH_,ionstr_,z1_,nH1_,pK0_] calculates the standard Gibbs energies of formation of the two species of a reactant made up of a two species.";
calcGef3sp::usage="calcGef3sp[equat_,pH_,ionstr_,z1_,nH1_,pK10_,pK20] calculates the standard Gibbs energies of formation of the three species of a reactant made up of a three species.";*)
(*calcNHrx::usage="calcNHrx[eq_,pHlist_,islist_] calculates the change in binding of hydrogen ions in a biochemical reaction.";
rxthermotab::usage="rxthermotab[eq_,pHlist_,islist_] calculates a table of standard transformed reaction Gibbs energies, apparent equilibrium constants, and changes in binding of hydrogen ions in a biochemical reaction.";*)
(*round::usage="round[vec_,params_:{4,2}] rounds to the desired number of digits.";*)
(*mkeqm::usage="mkeqm[c_List,s_List] types out a biochemical reaction from its stoichiometric number vector.";*)
(*nameMatrix::usage="nameMatrix[m_List,s_List] types out the biochemical reactions in a system of biochemical reactions from the stoichiometric number matrix.";*)
(*calcappredpot::usage="calcappredpot[eq_,nu_,pHlist_,islist_] calculates the standard apparent reduction potential of a half reaction at the desired pH and ionic strength.";
equcalcc::usage="equcalcc[as_,lnk_,no_] calculates the equilibrium composition for a biochemical reaction or a series of biochemical reactions, given the conservation matrix, a list of transformed Gibbs energies of formation, and a list of initial concentrations of reactants.";
equcalcrx::usage="equcalcrx[nt_,lnkr_,no_] calculates the equilibrium composition for a biochemical reaction or a series of biochemical reactions, given the transposed stoichiometric number matrix, the apparent equilibrium constants of the reactons, and a list of initial concentrations of reactants.";
listfnpHis::usage="listfnpHis is a list of functions, like atp, that gives the standard transformed Gibbs energies of formation of reactants.";
listspeciesdata::usage="listspeciesdata is a list of names, like atpsp, of data files on the species of a reactant.";
listdG3I::usage="listdG3I is a list of vectors, like atpis, that give the values of the standard transformed Gibbs energies of formation at pH 7 and 3 ionic strengths.";
list::usage="list is a list of names of reactants, each in quotation marks.";
listreactantspH::usage="listreactantspH is a list of vectors, like atppH,that give the values of the standard transformed Gibbs energy of formation of a reactant at 5 pH values.";
listreactantsh::usage="listreactantsh is a list of the names in quotation marks for the reactants for which the standard transformed enthalpy of formation is calculated.";
listhisreactants::usage="listhisreactants is a vector of the values of standard transformed enthalpies of formation of reactants at three ionic strengths.";
listfnpHish::usage="listfnpHish is a function of pH and ionic strength that gives the standard transformed enthalpy of formation of a reactant.";
listspeciesdatah::usage="listspeciesdatah is a list of names, like atpsp, of data files on the species of a reactant for which the enthalpy is known.";
listhpHreactants ::usage="listhpHreactants is a list of names of reactants, like atphpH, that give the values of the standard transformed enthalpy of formation at 5 pH values.";*)
Protect[pH];
pH::usage="pH is an independent variable.";
Protect[is];
is::usage="is is ionic strength, which is an independent variable.";
Protect[T];
T::usage="Temperature in Kelvin."
(*atp::usage="atp is the name of a reactant that yields a function of pH and ionic strength for the standard transformed Gibbs energy of formation.";
atpsp::usage="atpsp yields the basic data on the species of the reactant.";
atpis::usage="atpis yields the standard transformed Gibbs energy of a reactant at 3 values of the ionic strength.";
atppH::usage="atppH yields the standard transformed Gibbs energy of a reactant at 5 values of the ionic strength.";
atph::usage="atph yields the function of pH and ionic strength that gives the standard transformed enthalpy of formation of atp.";
atphis::usage="atphis yields the standard transformed enthaply of atp at 3 ionic strengths.";
atphpH::usage="atphis yields the standard transformed enthaply of atp at 5 pH values.";
table1::usage="table1 produces a table of standard transformed Gibbs energies of formation of reactants at pH 7 and ionic strengths of 0, 0.10, and 0.25 M.";
table2::usage="table2 produces a table of standard transformed Gibbs energies of formation of reactants at ionic strength 0.25 M and pHs of 5, 6, 7, 8, and 9.";
table3::usage="table3 produces a table of standard transformed enthalpies of formation of reactants at pH 7 and ionic strengths of 0, 0.10, and 0.25 M.";
table4::usage="table4 produces a table of standard transformed enthalpies of formation of reactants atonic strengths 0.25 M and pHs of 5, 6, 7, 8, and 9.";*)


(*Begin["BasicBiochemData2`Private`"]*)
(*Modified by Niko Sonnenschein (move Private after species data section) 06/16/11*)


Begin["Private`"]


calcdGmat[speciesmat_] := 
Module[{dGzero, zi, nH, pHterm, isterm,gpfnsp},(*This program produces the function of pH and ionic strength (is) that gives the standard transformed Gibbs energy of formation of a reactant (sum of species) at 298.15 K.  The input speciesmat is a matrix that gives the standard Gibbs energy of formation, the standard enthalpy of formation, the electric charge, and the number of hydrogen atoms in each species. There is a row in the matrix for each species of the reactant. gpfnsp is a list of the functions for the species.  Energies are expressed in kJ mol^-1.*)
dGzero = speciesmat[[All,1]];
zi = speciesmat[[All,3]];
nH = speciesmat[[All,4]];
pHterm = nH*8.31451*.29815*Log[10^-pH];
isterm = 2.91482*((zi^2) - nH)*(is^.5)/(1 + 1.6*is^.5);
gpfnsp=dGzero - pHterm - isterm;
-8.31451*.29815*Log[Apply[Plus,Exp[-1*gpfnsp/(8.31451*.29815)]]]]


calcdHmat[speciesmat_]:=Module[{dHzero,zi,nH,dhfnsp,dGzero,pHterm,isenth,dgfnsp,dGreactant,ri,gpfnsp},(*This program produces the function of ionic strength (is)that gives the standard transformed enthalpy of formation of a reactant (sum of species) at 298.15 K.  The input is a matrix that gives the standard Gibbs energy of formation,the standard enthalpy of formation, the electric charge,and the number of hydrogen atoms in the species in the reactant.  There is a row in the matrix for each species of the reactant.  dhfnsp is a list of the functions for the species.  Energies are expressed in kJ mol^-1.*)
	dHzero=speciesmat[[All,2]];
	zi=speciesmat[[All,3]];
	nH=speciesmat[[All,4]];
	isenth=1.4775*((zi^2)-nH)*(is^.5)/(1+1.6*is^.5);
	dhfnsp=dHzero+isenth;
(*Now calculate the functions for the standard Gibbs energies of formation of the species.*)
 dGzero=speciesmat[[All,1]];
pHterm=nH*8.31451*.29815*Log[10^-pH];
gpfnsp=dGzero-pHterm-isenth*2.91482/1.44775;
(*Now calculate the standard transformed Gibbs energy of formation for the reactant.*)
dGreactant=-8.31451*.29815*Log[Apply[Plus,Exp[-1*gpfnsp/(8.31451*.29815)]]];
(*Now calculate the equilibrium mole fractions of the species in the reactant and the mole fraction-weighted average of the functions for the standard transformed enthalpies of the species.*)
ri=Exp[(dGreactant-gpfnsp)/(8.31451*.29815)];
ri.dhfnsp]


(*calcdH3I[reactanth_]:=Module[{out1,out2,out3},(*This program calculates the standard transformed enthalpies of formation at 298 K, pH 7, and ionic strengths of 0, 0.10, and 0.25 M.  The reactanth name calls a function of pH and ionic strength or a constant.*)
out1=reactanth/.{pH->7,is->0};
out2=reactanth/.{pH->7,is->.1};
out3=reactanth/.{pH->7,is->.25};
{out1,out2,out3}];*)


(*calcdH5pH[reactanth_]:=Module[{out1,out2,out3,out4,out5},(*This program calculates the standard transformed enthalpies of formation at 298 K, ionic strength 0.25 M and pHs 5, 6, 7, 8, and 9.  The reactanth name calls a function of pH and ionic strength or a constant.*)
out1=reactanth/.{pH->5,is->.25};
out2=reactanth/.{pH->6,is->.25};
out3=reactanth/.{pH->7,is->.25};
out4=reactanth/.{pH->8,is->.25};
out5=reactanth/.{pH->9,is->.25};
{out1,out2,out3,out4,out5}];*)


calcpK[speciesmat_, no_, is_] := 
  Module[{lnkzero, sigmanuzsq, lnK},(*Calculates pKs for a weak acid at 298.15 K at specified ionic strengths (is) when the number no of the pK is specified.  pKs are numbered 1,2, 3,... from the highest pK to the lowest pK, but the highest pK for a weak acid may be omitted if it is outside of the range 5 t0 9.  For h3PO4, pK1=calc[pisp,1,{0}] = 7.22.*) 
   lnkzero = (speciesmat[[no + 1,1]] - speciesmat[[no,1]])/
      (8.31451*0.29815); sigmanuzsq = speciesmat[[no,3]]^2 - 
      speciesmat[[no + 1,3]]^2 + 1; 
    lnK = lnkzero + (1.17582*is^0.5*sigmanuzsq)/
       (1 + 1.6*is^0.5); N[-(lnK/Log[10])]]


calctrGerx[eq_,pHlist_,islist_]:=Module[{energy},(*Calculates the standard transformed Gibbs energy of reaction in kJ mol^-1 at specified pHs and ionic strengths for a biochemical reaction typed in the form atp+h2o+de==adp+pi.  The names of reactants call the appropriate functions of pH and ionic strength.  pHlist and is list can be lists.*)
energy=Solve[eq,de];energy[[1,1,2]]/. pH->pHlist/. is->islist]


calckprime[eq_, pHlist_, islist_] := Module[{energy, dG},(*Calculates the apparent equilibrium constant at specified pHs and ionic strengths for a biochemical reaction typed in the form atp+h2o+de==adp+pi.  The names of reactants call the appropriate functions of pH and ionic strength.  pHlist and is list can be lists.*) 
   energy = Solve[eq, de]; 
    dG = energy[[1,1,2]] /. pH -> pHlist /. is -> islist; 
    E^(-(dG/(8.31451*0.29815)))]


calcdGHT[speciesmat_] := Module[{dGzero, dGzeroT, dHzero, 
    zi, nH, gibbscoeff, pHterm, isterm, gpfnsp, dGfn, dHfn,istermG},(*This program produces the function of T (in Kelvin), pH, and ionic strength (is) that gives the stndard transformed Gibbs energy of formation of a reactant (sum of species) and the standard transformed enthalpy.  The input speciesmat is a matrix that gives the standard Gibbs energy of formation at 198.15 K, the standard enthalpy of formation at 298.15 K, the electric charge, and the number of hydrogen atoms in each species.  There is a row in the matrix for each species of the reactant.  gpfnsp is a list of the functions for the transformed Gibbs energies of the species.  The output is in the form {dGfn,dHfn}, and the energies are expressed in kJ mol^-1.  The values of the standard transformed Gibbs energy of formation and the standard transformed enthalpy of formation can be calculated at any temperature in the range 273.15 K to 313.15 K, any pH in the range 5 to 9, and any ionic strength in the range 0 to 0.35 M by use of the assignment operator (/.).*) 
   {dGzero, dHzero, zi, nH} = Transpose[speciesmat]; 
    gibbscoeff = (9.20483*T)/10^3 - (1.284668*T^2)/10^5 + 
      (4.95199*T^3)/10^8; dGzeroT = (dGzero*T)/298.15 + 
      dHzero*(1 - T/298.15); pHterm = 
     (nH*8.31451*T*Log[10^(-pH)])/1000; 
    istermG = (gibbscoeff*(zi^2 - nH)*is^0.5)/
      (1 + 1.6*is^0.5); gpfnsp = dGzeroT - pHterm - istermG; 
    dGfn = -((8.31451*T*Log[Plus @@ 
          (E^(-(gpfnsp/((8.31451*T)/1000))))])/1000); 
    dHfn = -(T^2*D[dGfn/T, T]); {dGfn, dHfn}]


calcGef1sp[equat_, pHc_, ionstr_, z1_, nH1_] := 
  Module[{energy, trGereactant},(*This program uses \[Sum]\[Nu]i\[CapitalDelta]fGi'\[Degree]=-RTlnK' to calculate the standard Gibbs energy of formation of the species of a reactant that does not have a pK in the range 4 to 10. The equation is of the form pyruvate+atp-x-adp==-8.31451*.29815*Log[K'], where K' is the apparent equilibrium constant at 298.15 K, pHc, and ionic strength is.  The reactant has charge number z1 and hydrogen atom number nH1.  The output is the species vector without the standard enthalpy of formation.*) 
   energy = Solve[equat, x] /. pH -> pHc /. is -> ionstr; 
    trGereactant = energy[[1,1,2]]; 
    gef1 = trGereactant - nH1*8.31451*0.29815*Log[10]*pHc + 
      (2.91482*(z1^2 - nH1)*ionstr^0.5)/
       (1 + 1.6*ionstr^0.5); {{gef1, _, z1, nH1}}]


calcGef2sp[equat_, pHc_, ionstr_, z1_, nH1_, pK0_] := 
  Module[{energy, trGereactant, pKe, trgefpHis,gef1, gef2},(*This program uses \[Sum]\[Nu]i\[CapitalDelta]fGi'\[Degree]=-RTlnK' to calculate the standard Gibbs energies of formation of the two species of a reactant for which the pK at zero ionic strength is pK0. The equation is of the form pyruvate+atp-x-adp==-8.31451*.29815*Log[K'], where K' is the apparent equilibrium constant at 298.15 K, pHc, and ionic strength is.  The more basic form of the reactant has charge number z1 and hydrogen atom number nH1.  The output is the species matrix without the standard enthalpies of formation.*) 
 energy = Solve[equat, x] /. pH -> pHc /. is -> ionstr; 
    trGereactant = energy[[1,1,2]]; 
    pKe = pK0 + (0.510651*ionstr^0.5*2*z1)/
       (1 + 1.6*ionstr^0.5); trgefpHis = 
     trGereactant + 8.31451*0.29815*Log[1 + 10^(pKe - pHc)]; 
    gef1 = trgefpHis - nH1*8.31451*0.29815*Log[10]*pHc + 
      (2.91482*(z1^2 - nH1)*ionstr^0.5)/
       (1 + 1.6*ionstr^0.5); 
    gef2 = gef1 + 8.31451*0.29815*Log[10^(-pK0)]; 
    {{gef1, _, z1, nH1}, {gef2, _, z1 + 1, nH1 + 1}}]


calcGef3sp[equat_, pHc_, ionstr_, z1_, nH1_, pK10_, 
   pK20_] := Module[{energy, trGereactant, pKe, trgefpHis, 
    gef1, gef2, gef3, pK1e, pK2e},(*This program uses \[Sum]\[Nu]i\[CapitalDelta]fGi'\[Degree]=-RTlnK' to calculate the standard Gibbs energies of formation of the three species of a reactant for which the pKs at zero ionic strength is pK10 and pK20. The equation is of the form pyruvate+atp-x-adp==-8.31451*.29815*Log[K'], where K' is the apparent equilibrium constant at 298.15 K, pHc, and ionic strength is.  The more basic form of the reactant has charge number z1 and hydrogen atom number nH1.  The output is the species matrix without the standard enthalpies of formation of the three species.*) 
   energy = Solve[equat, x] /. pH -> pHc /. is -> ionstr; 
    trGereactant = energy[[1,1,2]]; 
    pK1e = pK10 + (0.510651*ionstr^0.5*2*z1)/
       (1 + 1.6*ionstr^0.5); 
    pK2e = pK20 + (0.510651*ionstr^0.5*(2*z1 + 2))/
       (1 + 1.6*ionstr^0.5); trgefpHis = 
     trGereactant + 8.31451*0.29815*
       Log[1 + 10^(pK1e - pHc) + 10^(pK1e + pK2e - 2*pHc)]; 
    gef1 = trgefpHis - nH1*8.31451*0.29815*Log[10]*pHc + 
      (2.91482*(z1^2 - nH1)*ionstr^0.5)/
       (1 + 1.6*ionstr^0.5); 
    gef2 = gef1 + 8.31451*0.29815*Log[10^(-pK10)]; 
    gef3 = gef2 + 8.31451*0.29815*Log[10^(-pK20)]; 
    {{gef1, _, z1, nH1}, {gef2, _, z1 + 1, nH1 + 1}, 
     {gef3, _, z1 + 2, nH1 + 2}}]


calcNHrx[eq_, pHlist_, islist_] := Module[{energy},(*This program calculates the change in the binding of hydrogen ions in a biochemical reaaction at specified pHs and ionic strengths.*) 
   energy = Solve[eq, de]; 
    D[energy[[1,1,2]], pH]/(8.31451*0.29815*Log[10]) /. 
      pH -> pHlist /. is -> islist]


rxthermotab[eq_,pHlist_,islist_]:=Module[{energy,tg,tk,tn},(*This program uses three other programs to make a thermodynamic table of standard transformed reaction Gibbs energies, apparent equilibrium constants, and changes in the number of hydrogen ions bound in a biochemical reaction.*)
tg=calctrGerx[eq,pHlist,islist];tk=calckprime[eq,pHlist,islist];tn=calcNHrx[eq,pHlist,islist];TableForm[Join[{tg,tk,tn}]]]


round[vec_, params_:{4, 2}] := 
  Flatten[Map[NumberForm[#1, params] & , {vec}, {2}]]


mkeqm[c_List,s_List]:=(*c_List is the list of stoichiometric numbers for a reaction.  s_List is a list of the names of species or reactants.  These names have to be put in quotation marks.*)Map[Max[#,0]&,-c].s->Map[Max[#,0]&,c].s


nameMatrix[m_List,s_List]:=(*m_List is the transposed stoichiometric number matrix for the system of reactions. s_List is a list of the names of species or reactants.  These names have to be put in quotation marks.*)Map[mkeqm[#,s]&,m]


calcappredpot[eq_, nu_, pHlist_, islist_] := 
  Module[{energy},(*Calculates the standard apparent reduction potential of a half reaction at specified pHs and ionic strengths for a biochemical half reaction typed in the form nadox+de==nadred.  The names of the reactants call the corresponding functions of pH and ionic strength.  nu is the number of electrons involved.  pHlist and islist can be lists.*)
 energy = Solve[eq, de]; 
    -(energy[[1,1,2]]/(nu*96.485)) /. pH -> pHlist /. 
     is -> islist]


equcalcc[as_,lnk_,no_]:=Module[{l,x,b,ac,m,n,e,k},
(*	as=conservation matrix
lnk=-(1/RT)(Gibbs energy of formation vector at T)
no=initial composition vector *)
(*Setup*)
{m,n}=Dimensions[as];
b=as.no;
ac=as;
(*Initialize*)
l=LinearSolve[ as.Transpose[as],-as.(lnk+Log[n]) ];
(*Solve*)
Do[	e=b-ac.(x=E^(lnk+l.as) );
If[(10^-10)>Max[ Abs[e] ], Break[] ];
l=l+LinearSolve[ac.Transpose[as*Table[x,{m}]],e],
{k,100}];
If[ k==100,Return["Algorithm Failed"] ];
Return[x]
]


equcalcrx[nt_,lnkr_,no_]:=Module[{as,lnk},
(*nt=transposed stoichiometric number matrix
lnkr=ln of equilibrium constants of rxs (vector)
no=initial composition vector*)
(*Setup*)
lnk=LinearSolve[nt,lnkr];
as=NullSpace[nt];
equcalcc[as,lnk,no]
]


End[];


EndPackage[];
